<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:ResizingAdorner"
             xmlns:c="clr-namespace:ResizingAdorner.Controls"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="ResizingAdorner.MainView"
             x:CompileBindings="True" x:DataType="local:MainView"
             Background="Transparent"
             Name="Editor"
             FontFamily="avares://Avalonia.Themes.Fluent/Assets#Inter">

  <UserControl.Styles>
    <StyleInclude Source="/Resizing.axaml"></StyleInclude>
  </UserControl.Styles>

  <UserControl.KeyBindings>
    <KeyBinding Command="{Binding #Editor.OnDelete}" Gesture="Delete" />
    <KeyBinding Command="{Binding #Editor.OnDelete}" Gesture="Back" />
  </UserControl.KeyBindings>

  <UserControl.Resources>

    <MenuFlyout x:Key="GridInsertMenuFlyout" Placement="Auto">
      <MenuItem Header="TextBlock" Command="{Binding #Editor.OnInsertGrid}" CommandParameter="{x:Type TextBlock}" />
      <MenuItem Header="TextBox" Command="{Binding #Editor.OnInsertGrid}" CommandParameter="{x:Type TextBox}"/>
      <MenuItem Header="Label" Command="{Binding #Editor.OnInsertGrid}" CommandParameter="{x:Type Label}" />
      <Separator />
      <MenuItem Header="CheckBox" Command="{Binding #Editor.OnInsertGrid}" CommandParameter="{x:Type CheckBox}" />
      <MenuItem Header="RadioButton" Command="{Binding #Editor.OnInsertGrid}" CommandParameter="{x:Type RadioButton}" />
      <Separator />
      <MenuItem Header="Slider" Command="{Binding #Editor.OnInsertGrid}" CommandParameter="{x:Type Slider}" />
      <Separator />
      <MenuItem Header="Ellipse" Command="{Binding #Editor.OnInsertGrid}" CommandParameter="{x:Type Ellipse}" />
      <MenuItem Header="Rectangle" Command="{Binding #Editor.OnInsertGrid}" CommandParameter="{x:Type Rectangle}" />
    </MenuFlyout>

    <MenuFlyout x:Key="CanvasInsertMenuFlyout" Placement="Auto">
      <MenuItem Header="TextBlock" Command="{Binding #Editor.OnInsertCanvas}" CommandParameter="{x:Type TextBlock}" />
      <MenuItem Header="TextBox" Command="{Binding #Editor.OnInsertCanvas}" CommandParameter="{x:Type TextBox}"/>
      <MenuItem Header="Label" Command="{Binding #Editor.OnInsertCanvas}" CommandParameter="{x:Type Label}" />
      <Separator />
      <MenuItem Header="CheckBox" Command="{Binding #Editor.OnInsertCanvas}" CommandParameter="{x:Type CheckBox}" />
      <MenuItem Header="RadioButton" Command="{Binding #Editor.OnInsertCanvas}" CommandParameter="{x:Type RadioButton}" />
      <Separator />
      <MenuItem Header="Slider" Command="{Binding #Editor.OnInsertCanvas}" CommandParameter="{x:Type Slider}" />
      <Separator />
      <MenuItem Header="Ellipse" Command="{Binding #Editor.OnInsertCanvas}" CommandParameter="{x:Type Ellipse}" />
      <MenuItem Header="Rectangle" Command="{Binding #Editor.OnInsertCanvas}" CommandParameter="{x:Type Rectangle}" />
    </MenuFlyout>

  </UserControl.Resources>
  
  <TabControl Padding="12,0,12,12">

    <!-- DockPanel -->
    
    <TabItem Header="DockPanel">

      <DockPanel Name="DockPanel" 
            Classes="resizing"
            Background="WhiteSmoke"
            LastChildFill="True">

        <Button Content="Test Button" DockPanel.Dock="Left" />
        <TextBox Text="Test TextBox" DockPanel.Dock="Right" />
        <CheckBox Content="Test CheckBox" DockPanel.Dock="Top" />
        <Label Content="Test Label" DockPanel.Dock="Bottom" />
        <TextBlock Text="Test TextBlock" Background="LightGray" />
        
      </DockPanel>

    </TabItem>

    <!-- StackPanel -->
    
    <TabItem Header="StackPanel">

      <StackPanel Name="StackPanel" 
                  Classes="resizing"
                  Orientation="Vertical"
                  Background="WhiteSmoke">

        <Button Content="Test Button" />
        <TextBox Text="Test TextBox" />
        <CheckBox Content="Test CheckBox" />
        <Label Content="Test Label" />
        <TextBlock Text="Test TextBlock" Background="LightGray" />

      </StackPanel>

    </TabItem>

    <!-- WrapPanel -->
    
    <TabItem Header="WrapPanel">

      <WrapPanel Name="WrapPanel" 
                 Classes="resizing"
                 Background="WhiteSmoke">

        <Button Content="Test Button" />
        <TextBox Text="Test TextBox" />
        <CheckBox Content="Test CheckBox" />
        <Label Content="Test Label" />
        <TextBlock Text="Test TextBlock" Background="LightGray" />

      </WrapPanel>

    </TabItem>

    <!-- Grid -->
    
    <TabItem Header="Grid">

      <Grid Name="Grid" 
            Classes="resizing"
            ColumnDefinitions="100,*,100" 
            RowDefinitions="100,*,100"
            Background="WhiteSmoke"
            ShowGridLines="False"
            ContextFlyout="{StaticResource GridInsertMenuFlyout}">

        <AdornerLayer.Adorner>
          <c:GridAdorner Grid="{Binding $parent[Control]}" />
        </AdornerLayer.Adorner>

        <Ellipse Fill="Red" Grid.Column="0" Grid.Row="0" />
        <Rectangle Fill="Green" Grid.Column="1" Grid.Row="1" />
        <Rectangle Fill="Blue" Grid.Column="2" Grid.Row="2" />

      </Grid>

    </TabItem>

    <!-- Canvas -->
    
    <TabItem Header="Canvas">

      <Canvas Name="Canvas" 
              Classes="resizing"
              Width="500" 
              Height="500" 
              Background="WhiteSmoke"
              ContextFlyout="{StaticResource CanvasInsertMenuFlyout}">

        <TextBlock Text="Test TextBlock" Background="LightGray" Canvas.Left="50" Canvas.Top="50" />
        <TextBox Text="Test TextBox" Canvas.Left="50" Canvas.Top="100" />
        <CheckBox Content="Test CheckBox" Canvas.Left="50" Canvas.Top="150" />
        <Button Content="Test Button" Canvas.Left="50" Canvas.Top="200" />
        <Label Content="Test Label" Canvas.Left="50" Canvas.Top="250" />
        <Slider Value="50" Minimum="0" Maximum="100" Canvas.Left="50" Canvas.Top="300" Width="150" />
        <StackPanel Spacing="8" Background="LightGray" Canvas.Left="50" Canvas.Top="380">
          <TextBlock Text="Test TextBlock" Margin="6" />
          <TextBox Text="Test TextBox" Margin="6" />
        </StackPanel>
        <Ellipse Fill="Gray" Width="100" Height="100" Canvas.Left="300" Canvas.Top="50" />
        <Rectangle Fill="Gray" Width="100" Height="100" Canvas.Left="300" Canvas.Top="200">
          <Rectangle.RenderTransform>
            <TransformGroup>
              <RotateTransform Angle="45" />
              <ScaleTransform ScaleX="1" ScaleY="1" />
            </TransformGroup>
          </Rectangle.RenderTransform>
        </Rectangle>
        <Rectangle Fill="Gray" Width="50" Height="50" Canvas.Left="300" Canvas.Top="375">
          <Rectangle.RenderTransform>
            <TransformGroup>
              <RotateTransform Angle="0" />
              <ScaleTransform ScaleX="2" ScaleY="2" />
            </TransformGroup>
          </Rectangle.RenderTransform>
        </Rectangle>

      </Canvas>

    </TabItem>

  </TabControl>

</UserControl>

